1> JVM calls main method
2> class name start with Capital_letter (upper case     upper case)
3> method name start with Small letter (lower case   upper case)
4> anything entered through keyboard will be in byte stream
5> String is class in java i.e string is reference type in java
6> import java.io.*;(jvm is smart jiske jarurat he usko use krta he)
7> Buffered reader class works on character oriented data matlab byte stream ko read nahi kar paega toh inputstream reader class ke jarurat padegi read krne ke liye
8> jab bhi buffered reader ka use kro tab io exception throw kar dena;import java.io.*;
9> static cheezo ko access krne ke liye object ke jarurat nahi
10> whenever arithmatic calculations are to be performed on CHAR,SHORT,BYTE type values Java would initally conert them into INT and then operation will be performed
11> Short hand operator(+=,-=,..) ==>implicit conversion;
12> CHAR is Numeric Type {UNICODE};
13> Char = 2byte ,Short = 2byte, float and int =4byte, double and long = 8byte;
14> java convert floating point into double(float x=2.4//error or float x=2.4f//no_error)
15> short circuit logical operator(&& and ||)(left to right associativity)(skips behaviour of rhs)
16> Array is static data structure(mtlb memory allocate kar he dega)
17> in java there should be boolean expression in IF statement
18> "String in double_quotes" and 'character in single_quotes'
19> in java there is no garbage value
20> mtd overloading mein return type same hona chahiye nito compile time error
21> mtd overloading ko ham C T Polymorphism and Early Binding and Static Binding kehte he
22> contructor will be called at last after static block and member initializer
23> modes of inheritance is not present in java jaise(private,protected,etc)
24> benefits of inheritance 1.reusesability 2.extensibility(add new features)
25> WHenever we create object of CHILD CLASS initially PARENT CLASS CONSTRUCTOR gets called then child class constructor will be called
26> java does not support multiple inheritance
27> No DESTRUCTOR in JAVA
28> if we declare particular class as FINAL then the class become uniheritable
29> FINALISE MTD (not used) Present in GARBAGE COLLECTOR class Ham isko Use bhi ni karte sirf JVM use krta he,its JVM tasks To call It.
30> MTd Overriding(jiska object uske mtd call hogi) matlab child class mtd always override parent class method
31> RULES FOR MTD OVERRIDING :-
    1.overriding mtd (child class mtd) MUST have either same or stronger access modifier than overriden mtd(parent class mtd).
    2.overriding mtd and overridden mtd MUST have either same or Covariant return type(Debatable_topic).
    3.overriding mtd MUST NOT throw a new Exception or an exception which is not the subtype of Exception thrown by overriden mtd.
32> Exception(father of all exception)
33> RUN TIME POLYMORPHISM:-Late Binding,Dynamic Binding,Dynamic Mtd Dispatched
    1.Binding:Association of object with method.
    2.if we ASSIGN child class object to the parent class reference,then concept is Upcasting.
      eg;-Par_clas ob = new child_clas();[MIXED OBJECT]
imp 3.All the mtd of parent class will be called from mixed object except overridden.
imp 4.only OVERRIDING mtd is called of subclass from mixed object.

34>Encapsulation=>Data_hiding.
35>Method_hiding=>overriding Static method.
36>Abstract(Mtlb Incomplete) Class.
   1.In case of java to create an abstract CLASS we need to declare it using abstract keyword.
   2.we cannot create object of abstract class
   3.if a class contains abstract METHOD it MUST be declare as abstract CLASS.
   4.an abstract class may contain abstract and non abstract methods
   5.it is not mandatory for an abstract class to contain an abstract method.
   6.if a class inherits from an abstract parent class,it will become MANDATORY for the child class to complete(override) all the abstract mtd of parent class.
37>Interfaces:not are classes
   1.Methods in Interface:are by default Abstract and Public
   2.variables in Interface:are by default final,static and Public 
   3.interface ko jo bhi mtd implement karegi usko saare mtd declare krne honge
38>Parent can never access child
39>
 